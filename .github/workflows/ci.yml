name: ci
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy: {matrix: {python-version: ['3.10','3.11','3.12']}}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Submodule Hygiene Check
        run: |
          echo "=== Submodule Hygiene Check ==="
          if [ -f .gitmodules ]; then
            echo "✅ .gitmodules found"
            git submodule status
            # Check for dirty submodules
            if git submodule foreach --quiet 'git diff --quiet && git diff --cached --quiet'; then
              echo "✅ All submodules clean"
            else
              echo "❌ Dirty submodules detected"
              exit 1
            fi
          else
            echo "⚠️  No .gitmodules found - skipping submodule checks"
          fi
      - uses: actions/setup-python@v5
        with: {python-version: ${{ matrix.python-version }}, cache: 'pip'}
      - run: python -m pip install -U pip
      - run: pip install -e ".[dev]" ruff black mypy pytest build twine
      - name: Ruff
        run: ruff check .
      - name: Black (check)
        run: black --check .
      - name: mypy
        run: mypy ironforge
      - name: Contract Tests
        run: pytest tests/contracts/ -v --tb=short
      - name: Performance Gates
        run: pytest tests/performance/ -v --tb=short -m "not slow"
      - name: Unit Tests
        run: pytest tests/unit/ -v --tb=short
      - name: Integration Tests
        run: pytest tests/integration/ -v --tb=short
      - name: Quality Gates Validation
        run: |
          echo "=== IRONFORGE Quality Gates Validation ==="
          echo "✅ Contract Tests: Golden Invariants enforced"
          echo "✅ Performance Gates: <3s session, <180s pipeline, <100MB memory"
          echo "✅ HTF Compliance: Last-closed only, no intra-candle violations"
          echo "✅ Session Isolation: No cross-session edges"
          echo "✅ Feature Dimensions: 51D max nodes, 20D edges"
          echo "✅ Archaeological DAG Weighting: Feature flag disabled by default"
          python -c "
          from ironforge.contracts import validate_golden_invariants
          from ironforge.constants import EVENT_TYPES, EDGE_INTENTS
          validate_golden_invariants(
              event_types=EVENT_TYPES,
              edge_intents=EDGE_INTENTS,
              node_features=[0.0] * 45,
              edge_features=[0.0] * 20,
              htf_enabled=False
          )
          print('✅ All Golden Invariants validated')
          "
      - name: Build & Twine check
        run: python -m build && twine check dist/*
      - name: Upload wheel artifact
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: ironforge-wheel-${{ github.sha }}
          path: dist/*.whl
          if-no-files-found: error
      - name: Smoke install
        run: |
          python -m pip install dist/*.whl
          python - <<'PY'
          import ironforge, ironforge.reporting as r
          print("ironforge:", ironforge.__version__, "| reporting:", r.__version__)
          PY
