[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ironforge"
dynamic = ["version"]
description = "Archaeological discovery system for market pattern analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "IRON Ecosystem", email = "noreply@iron.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.24.0,<2.0.0",
    "pandas>=2.2.0",
    "torch>=2.0.0,<2.5.0",
    "torch-geometric>=2.4.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "scikit-learn>=1.3.0,<1.6.0",
    "networkx>=3.0",
    "tqdm>=4.65.0",
    "PyYAML>=6.0",
    "scipy>=1.10.0",
    "joblib>=1.3.0",
    "typing-extensions>=4.5.0",
    "orjson>=3.9.0",
    "pyarrow>=14.0.0",
    "iron-core>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.3.0",
    "black>=24.8.0",
    "ruff>=0.6.8",
    "mypy>=1.10.0",
    "bandit>=1.7.9",
    "coverage>=7.6.0",
    "memory-profiler>=0.61.0",
    "psutil>=5.9.0",
]

[project.scripts]
ironforge = "ironforge.sdk.cli:main"
ifg = "ironforge.sdk.cli:main"

[project.urls]
Homepage = "https://github.com/iron-ecosystem/ironforge"
Repository = "https://github.com/iron-ecosystem/ironforge"

[tool.setuptools.packages.find]
include = ["ironforge*"]

[tool.setuptools.dynamic]
version = {attr = "ironforge.__version__.__version__"}

[tool.python]
version = ">=3.10"

[tool.black]
line-length = 120  # Match Ruff line length
target-version = ["py310"]

[tool.ruff]
line-length = 120  # More permissive line length
target-version = "py310"
extend-exclude = ["tests/_golden/**", "archon/**"]  # Exclude archon submodule

[tool.ruff.lint]
select = ["E","F","I","UP","B","SIM","C4"]  # Removed ARG (unused arguments) 
ignore = [
    "E501",    # Line too long (handled by black)
    "F401",    # Unused imports (common in __init__.py)
    "F403",    # Star imports (sometimes necessary)
    "F841",    # Unused local variables (development convenience)
    "B008",    # Function calls in argument defaults
    "SIM108",  # Use ternary operator (style preference)
    "C408",    # Unnecessary dict/list/tuple call
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
disallow_untyped_defs = true
no_implicit_optional = true
namespace_packages = true
files = ["ironforge"]
exclude = "(^tests/_golden/|^scripts/|^tests/integration/|^ironforge/analysis/|^ironforge/learning/|^ironforge/synthesis/|^ironforge/validation/|^ironforge/utilities/|^config.py)"

[tool.bandit]
skips = ["B101", "B110"] # assert allowed in tests, ignore existing try/except/pass patterns
exclude_dirs = ["tests/integration", "ironforge/analysis", "ironforge/learning", "ironforge/synthesis", "ironforge/validation", "ironforge/utilities"]

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "performance: performance regression tests",
    "smoke: smoke tests for basic functionality",
    "slow: slow tests that require extended timeout",
    "strict_mode: tests that require STRICT runtime mode",
    "compat_mode: tests that verify COMPAT runtime mode behavior",
]
timeout = 60
addopts = [
    "--timeout=60",
    "--timeout-method=thread",
    "-v",
    "--tb=short",
]
